echo "Working in $MMDAPP" >&2
[ -f "$HOME/.bashrc" ] && . "$HOME/.bashrc" 

# search: 1) previous path; 2) distro source scripts; 3) distro deploy scripts.
PATH="$PATH:$MMDAPP/source/myx/myx.distro-source/sh-scripts:$MMDAPP/source/myx/myx.distro-deploy/sh-scripts"

. "$MMDAPP/source/myx/myx.distro-source/sh-lib/DistroShellContext.include"
DistroShellContext --distro-from-source

Require ListDistroScripts
Require ListAllActions

# Action myx/yaumnrc/test-parser.url
# Action make-ws2017.sh

Action(){
	local actionCommand="$1" ; shift
	if [ -z "$actionCommand" ] ; then
		( . "$MDSC_SOURCE/myx/myx.distro-source/sh-lib/HelpAction.include" )
		set +e ; return 1
	fi
	case "$actionCommand" in
		*.sh)
			( \
				. "$MMDAPP/actions/$actionCommand" ; \
				echo "$actionCommand: finished." ; \
			)
		;;
		*.url)
			open "$MMDAPP/actions/$actionCommand"
		;;
		*)
			echo "Unknown Action Type, source:" >&2
			myx.common lib/prefix "    " cat "$MMDAPP/actions/$actionCommand"
	esac
}


Deploy(){
	local distroCommand="$1" ; shift
	if [ -z "$distroCommand" ] ; then
		( . "$MDSC_SOURCE/myx/myx.distro-deploy/sh-lib/HelpDeploy.include" )
		set +e ; return 1
	fi


	if ! type "${distroCommand%.fn.sh}" >/dev/null 2>&1 ; then
		if [ ! -f "$MMDAPP/source/myx/myx.distro-deploy/sh-scripts/${distroCommand%.fn.sh}.fn.sh" ] ; then
			echo "ERROR: unknown command: ${distroCommand%.fn.sh}" >&2
			set +e ; return 1
		fi
		. "$MMDAPP/source/myx/myx.distro-deploy/sh-scripts/${distroCommand%.fn.sh}.fn.sh"
	fi

	set +e

	"${distroCommand%.fn.sh}" "$@" || {
		EXITCODE=$?
		echo "ERROR: exited with error status ($EXITCODE)" >&2
		set +e
		return $EXITCODE
	}
	return 0

	( "${distroCommand%.fn.sh}" "$@" ; ) || {
		EXITCODE=$?
		echo "ERROR: exited with error status ($EXITCODE)" >&2
		set +e
		return $EXITCODE
	}
}


Source(){
	local distroCommand="$1" ; shift
	if [ -z "$distroCommand" ] ; then
		( . "$MDSC_SOURCE/myx/myx.distro-source/sh-lib/HelpSource.include" )
		set +e ; return 1
	fi

	if ! type "${distroCommand%.fn.sh}" >/dev/null 2>&1 ; then
		if [ ! -f "$MMDAPP/source/myx/myx.distro-source/sh-scripts/${distroCommand%.fn.sh}.fn.sh" ] ; then
			echo "ERROR: unknown command: ${distroCommand%.fn.sh}" >&2
			set +e ; return 1
		fi
		. "$MMDAPP/source/myx/myx.distro-source/sh-scripts/${distroCommand%.fn.sh}.fn.sh"
	fi

	set +e

	"${distroCommand%.fn.sh}" "$@" || {
		EXITCODE=$?
		echo "ERROR: exited with error status ($EXITCODE)" >&2
		set +e
		return $EXITCODE
	}
	return 0

	( "${distroCommand%.fn.sh}" "$@" ; ) || {
		EXITCODE=$?
		echo "ERROR: exited with error status ($EXITCODE)" >&2
		set +e
		return $EXITCODE
	}
}

consoleActionsCompletion()
{
	local PREFIX="$2"
	if [ -z "$PREFIX" ] ; then
		COMPREPLY=( $( ListAllActions --completion | sed 's!/.*!/!' | sort -u ) )
	else
		COMPREPLY=( $( ListAllActions --completion | grep "^$PREFIX" | sort -u ) )
	fi
}

complete -F consoleActionsCompletion "Action"
#complete -W "\`ListAllActions --completion\`"    "Action"

complete -W "\`ListDistroScripts\`" "."
complete -W "\`ListDistroScripts\`" "*"
complete -W "\`ListDistroScripts\`" "which"
complete -W "\`ListDistroScripts --completion\`" "Require"
complete -W "\`ListDistroScripts --completion\`" "Distro"
complete -W "\`ListDistroScripts --completion --type deploy\`" "Deploy"
complete -W "\`ListDistroScripts --completion --type source\`" "Source"

PROMPT_COMMAND="set +e"

consolePromptState(){
	if [ ! -z "$MDSC_INT_CD" ] ; then
		echo "Changing directory: $MDSC_INT_CD" >&2
		cd "$MDSC_INT_CD"
		export -n MDSC_INT_CD
	fi
	printf "MDSSC:%s:%s" "$MDSC_INMODE" "$(basename "${MDSC_PRJ_NAME:--}")"
}

PS1="\` consolePromptState \`: $PS1"
export PS1

if [ ! -z "$MDSC_PRJ_NAME" ] ; then
	# DistroSelectProject MDSC_PRJ_NAME "$MDSC_PRJ_NAME"
	export MDSC_SELECT_PROJECTS="$MDSC_PRJ_NAME"
	cd "$MMDAPP/source/$MDSC_PRJ_NAME"
	echo "Console: Project Selected: $MDSC_PRJ_NAME" >&2
fi
