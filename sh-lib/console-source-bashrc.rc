echo "Working in $MMDAPP" >&2
[ -f "$HOME/.bashrc" ] && . "$HOME/.bashrc" 

# source -> deploy
PATH="$PATH:$MMDAPP/source/myx/myx.distro-source/sh-scripts:$MMDAPP/source/myx/myx.distro-deploy/sh-scripts"

. "$MMDAPP/source/myx/myx.distro-source/sh-lib/DistroShellContext.include"
DistroShellContext --distro-from-source

Require ListDistroScripts
Require ListAllActions

# Action myx/yaumnrc/test-parser.url
# Action make-ws2017.sh

Action(){
	local actionCommand="$1" ; shift
	if [ -z "$actionCommand" ] ; then
		ShowActionInfo.fn.sh ; return 1
	fi
	case "$actionCommand" in
		*.sh)
			( \
				. "$MMDAPP/actions/$actionCommand" ; \
				echo "$actionCommand: finished." ; \
			)
		;;
		*.url)
			open "$MMDAPP/actions/$actionCommand"
		;;
		*)
			echo "Unknown Action Type, source:" >&2
			myx.common lib/prefix "    " cat "$MMDAPP/actions/$actionCommand"
	esac
}


Deploy(){
	local distroCommand="$1" ; shift
	if [ -z "$distroCommand" ] ; then
		"$MMDAPP/source/myx/myx.distro-deploy/sh-scripts/ShowDeployInfo.fn.sh" ; return 1
	fi
	if ! type "${distroCommand%.fn.sh}" >/dev/null 2>&1 ; then
		source "$MMDAPP/source/myx/myx.distro-deploy/sh-scripts/${distroCommand%.fn.sh}.fn.sh"
	fi
	( set -e ; "${distroCommand%.fn.sh}" "$@" ) || \
		( EXITCODE=$? ; set +x ; echo "ERROR: exited with error status ($EXITCODE)" ; exit $EXITCODE )
}


Source(){
	local distroCommand="$1" ; shift
	if [ -z "$distroCommand" ] ; then
		"$MMDAPP/source/myx/myx.distro-source/sh-scripts/ShowSourceInfo.fn.sh" ; return 1
	fi
	if ! type "${distroCommand%.fn.sh}" >/dev/null 2>&1 ; then
		source "$MMDAPP/source/myx/myx.distro-source/sh-scripts/${distroCommand%.fn.sh}.fn.sh"
	fi
	( set -e ; "${distroCommand%.fn.sh}" "$@" ) || \
		( EXITCODE=$? ; set +x ; echo "ERROR: exited with error status ($EXITCODE)" ; exit $EXITCODE )
}


complete -W "\`ListDistroScripts\`" "."
complete -W "\`ListDistroScripts\`" "*"
complete -W "\`ListDistroScripts\`" "which"
complete -W "\`ListAllActions --completion\`"    "Action"
complete -W "\`ListDistroScripts --completion\`" "Require"
complete -W "\`ListDistroScripts --completion\`" "Distro"
complete -W "\`ListDistroScripts --completion --type deploy\`" "Deploy"
complete -W "\`ListDistroScripts --completion --type source\`" "Source"

PS1="MDSSC: \`printf "\$MDSC_INMODE"\`: $PS1"
export PS1

### testing

Echo(){
	local prefixName="$1"
	local commandName="$2"
	echo "$commandName"
}

complete -F "Echo"    "TEST1"
